<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode on rayrain's blog</title><link>https://reisen1969.github.io/tags/leetcode/</link><description>Recent content in leetcode on rayrain's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 08 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://reisen1969.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>leetcode刷题</title><link>https://reisen1969.github.io/post/leetcode/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://reisen1969.github.io/post/leetcode/</guid><description>算法框架 各种遍历 数组的遍历 void traverse(int[] arr) { for (int i = 0; i &amp;lt; arr.length; i++) { // 迭代访问 arr[i] } } 链表的遍历 /* 基本的单链表节点 */ class ListNode { int val; ListNode next; } void traverse(ListNode head) { for (ListNode p = head; p != null;</description></item></channel></rss>